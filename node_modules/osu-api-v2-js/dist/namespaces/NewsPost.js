export var NewsPost;
(function (NewsPost) {
    /**
     * Get a NewsPost, its content, and the NewsPosts right before and right after it!
     * @param post The NewsPost, or its id, or its slug
     */
    async function getOne(post) {
        const lookup = typeof post === "object" ? post.id : post;
        const key = typeof post === "number" ? "id" : undefined;
        return await this.request("get", ["news", lookup], { key });
    }
    NewsPost.getOne = getOne;
    /**
     * Get all the NewsPosts of a specific year!
     * @param year The year the posts were made (defaults to **current year**)
     * @privateRemarks Because the only filter is the year, everything but `news_sidebar.news_posts` is actually completely useless!
     * You could maybe make a case for `years` being useful, but I don't believe it's useful enough to sacrifice the simplicity
     * @remarks If the specified year is invalid/has no news, it fallbacks to the default year
     */
    async function getMultiple(year) {
        const response = await this.request("get", ["news"], { year, limit: 0 }); // Put the limit at minimum because it's about stuff we're filtering out anyway
        return response.news_sidebar.news_posts; // NOT the only property as explained by the private remarks; it's believed to be the only USEFUL property
    }
    NewsPost.getMultiple = getMultiple;
})(NewsPost || (NewsPost = {}));
