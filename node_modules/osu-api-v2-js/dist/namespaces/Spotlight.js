import { Ruleset } from "../index.js";
export var Spotlight;
(function (Spotlight) {
    /**
     * Get the rankings of a spotlight from 2009 to 2020 on a specific ruleset!
     * @param ruleset Each spotlight has a different ranking (and often maps) depending on the ruleset
     * @param spotlight The spotlight in question
     * @param filter What kind of players do you want to see? Keep in mind `friends` has no effect if no authorized user (defaults to **all**)
     */
    async function getRanking(ruleset, spotlight, filter = "all") {
        spotlight = typeof spotlight === "number" ? spotlight : spotlight.id;
        return await this.request("get", ["rankings", Ruleset[ruleset], "charts"], { spotlight, filter });
    }
    Spotlight.getRanking = getRanking;
    /**
     * Get ALL legacy spotlights! (2009-2020, somewhat known as charts/ranking charts, available @ https://osu.ppy.sh/rankings/osu/charts)
     * @remarks The data for newer spotlights (2020 onwards, somewhat known as seasons) can be obtained through `getRoom()`
     * but you can't really get the id of those newer spotlights without going through the website's URLs (https://osu.ppy.sh/seasons/latest) as far as I know :(
     */
    async function getAll() {
        const response = await this.request("get", ["spotlights"]);
        return response.spotlights; // It's the only property
    }
    Spotlight.getAll = getAll;
})(Spotlight || (Spotlight = {}));
