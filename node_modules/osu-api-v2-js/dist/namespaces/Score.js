export var Score;
(function (Score) {
    /**
     * Get up to the 1000 (!!) most recent scores!
     * @param config Specify the ruleset as a filter, or use a cursor_string to get even more scores
     * @remarks You may get any amount of scores, from 0 to 1000, 0 being more likely when using a cursor_string
     */
    async function getSome(config) {
        return await this.request("get", ["scores"], { ...config });
    }
    Score.getSome = getSome;
    /**
     * Get the replay for a score!
     * @scope {@link Scope"public"}
     * @param score The score that has created the replay
     * @returns The correctly encoded content of what would be a replay file (you can just fs.writeFileSync with it!)
     */
    async function getReplay(score) {
        const score_id = typeof score === "number" ? score : score.id;
        return await this.request("get", ["scores", score_id, "download"]);
    }
    Score.getReplay = getReplay;
})(Score || (Score = {}));
