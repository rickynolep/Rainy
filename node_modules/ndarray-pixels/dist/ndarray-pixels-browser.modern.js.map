{"version":3,"file":"ndarray-pixels-browser.modern.js","sources":["../src/browser-get-pixels.ts","../src/common.ts","../src/browser-save-pixels.ts","../src/index.ts"],"sourcesContent":["import ndarray from 'ndarray';\nimport type { NdArray } from 'ndarray';\n\nexport function getPixelsInternal(\n\tbuffer: Uint8Array,\n\tmimeType: string\n): Promise<NdArray<Uint8Array>> {\n\t// Warn for Data URIs, URLs, and file paths. Support removed in v3.\n\tif (!(buffer instanceof Uint8Array)) {\n\t\tthrow new Error('[ndarray-pixels] Input must be Uint8Array or Buffer.');\n\t}\n\n\tconst blob = new Blob([buffer], { type: mimeType });\n\tconst path = URL.createObjectURL(blob);\n\n\t// Decode image with Canvas API.\n\treturn new Promise((resolve, reject) => {\n\t\tconst img = new Image();\n\t\timg.crossOrigin = 'anonymous';\n\t\timg.onload = function () {\n\t\t\tURL.revokeObjectURL(path as string);\n\n\t\t\tconst canvas = new OffscreenCanvas(img.width, img.height);\n\t\t\tconst context = canvas.getContext('2d')!;\n\t\t\tcontext.drawImage(img, 0, 0);\n\t\t\tconst pixels = context.getImageData(0, 0, img.width, img.height);\n\t\t\tresolve(\n\t\t\t\tndarray(\n\t\t\t\t\tnew Uint8Array(pixels.data),\n\t\t\t\t\t[img.width, img.height, 4],\n\t\t\t\t\t[4, 4 * img.width, 1],\n\t\t\t\t\t0\n\t\t\t\t)\n\t\t\t);\n\t\t};\n\t\timg.onerror = (err) => {\n\t\t\tURL.revokeObjectURL(path as string);\n\t\t\treject(err);\n\t\t};\n\t\timg.src = path;\n\t});\n}\n","import ndarray, { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\n\nexport interface ImageEncodeOptions {\n\ttype?: string;\n\tquality?: number;\n}\n\nexport function putPixelData(\n\tarray: NdArray<Uint8Array | Uint8ClampedArray>,\n\tdata: Uint8Array | Uint8ClampedArray,\n\tframe = -1\n): Uint8Array | Uint8ClampedArray {\n\tif (array.shape.length === 4) {\n\t\treturn putPixelData(array.pick(frame), data, 0);\n\t} else if (array.shape.length === 3) {\n\t\tif (array.shape[2] === 3) {\n\t\t\tops.assign(\n\t\t\t\tndarray(data, [array.shape[0], array.shape[1], 3], [4, 4 * array.shape[0], 1]),\n\t\t\t\tarray\n\t\t\t);\n\t\t\tops.assigns(ndarray(data, [array.shape[0] * array.shape[1]], [4], 3), 255);\n\t\t} else if (array.shape[2] === 4) {\n\t\t\tops.assign(\n\t\t\t\tndarray(data, [array.shape[0], array.shape[1], 4], [4, array.shape[0] * 4, 1]),\n\t\t\t\tarray\n\t\t\t);\n\t\t} else if (array.shape[2] === 1) {\n\t\t\tops.assign(\n\t\t\t\tndarray(data, [array.shape[0], array.shape[1], 3], [4, 4 * array.shape[0], 1]),\n\t\t\t\tndarray(\n\t\t\t\t\tarray.data,\n\t\t\t\t\t[array.shape[0], array.shape[1], 3],\n\t\t\t\t\t[array.stride[0], array.stride[1], 0],\n\t\t\t\t\tarray.offset\n\t\t\t\t)\n\t\t\t);\n\t\t\tops.assigns(ndarray(data, [array.shape[0] * array.shape[1]], [4], 3), 255);\n\t\t} else {\n\t\t\tthrow new Error('[ndarray-pixels] Incompatible array shape.');\n\t\t}\n\t} else if (array.shape.length === 2) {\n\t\tops.assign(\n\t\t\tndarray(data, [array.shape[0], array.shape[1], 3], [4, 4 * array.shape[0], 1]),\n\t\t\tndarray(\n\t\t\t\tarray.data,\n\t\t\t\t[array.shape[0], array.shape[1], 3],\n\t\t\t\t[array.stride[0], array.stride[1], 0],\n\t\t\t\tarray.offset\n\t\t\t)\n\t\t);\n\t\tops.assigns(ndarray(data, [array.shape[0] * array.shape[1]], [4], 3), 255);\n\t} else {\n\t\tthrow new Error('[ndarray-pixels] Incompatible array shape.');\n\t}\n\treturn data;\n}\n","import type { NdArray } from 'ndarray';\nimport { putPixelData } from './common';\nimport type { ImageEncodeOptions } from './common';\n\nexport async function savePixelsInternal(\n\tpixels: NdArray<Uint8Array | Uint8ClampedArray>,\n\toptions: ImageEncodeOptions\n): Promise<Uint8Array> {\n\t// Create OffscreenCanvas and write pixel data.\n\tconst canvas = new OffscreenCanvas(pixels.shape[0], pixels.shape[1]);\n\n\tconst context = canvas.getContext('2d')!;\n\tconst imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n\tputPixelData(pixels, imageData.data);\n\tcontext.putImageData(imageData, 0, 0);\n\n\treturn streamCanvas(canvas, options);\n}\n\n/** Creates readable stream from given OffscreenCanvas and options. */\nasync function streamCanvas(\n\tcanvas: OffscreenCanvas,\n\toptions: ImageEncodeOptions\n): Promise<Uint8Array> {\n\tconst blob = await canvas.convertToBlob(options);\n\tconst ab = await blob.arrayBuffer();\n\treturn new Uint8Array(ab);\n}\n","import type { NdArray } from 'ndarray';\nimport { getPixelsInternal } from './node-get-pixels';\nimport { savePixelsInternal } from './node-save-pixels';\n\n/**\n * Decodes image data to an `ndarray`.\n *\n * MIME type is optional when given a path or URL, and required when given a Uint8Array.\n *\n * Accepts `image/png` or `image/jpeg` in Node.js, and additional formats on browsers with\n * the necessary support in Canvas 2D.\n *\n * @param data\n * @param mimeType `image/jpeg`, `image/png`, etc.\n * @returns\n */\nasync function getPixels(data: Uint8Array, mimeType: string): Promise<NdArray<Uint8Array>> {\n\treturn getPixelsInternal(data, mimeType);\n}\n\n/**\n * Encodes an `ndarray` as image data in the given format.\n *\n * If the source `ndarray` was constructed manually with default stride, use\n * `ndarray.transpose(1, 0)` to reshape it and ensure an identical result from getPixels(). For an\n * ndarray created by getPixels(), this isn't necessary.\n *\n * Accepts `image/png` or `image/jpeg` in Node.js, and additional formats on browsers with\n * the necessary support in Canvas 2D.\n *\n * @param pixels ndarray of shape W x H x 4.\n * @param typeOrOptions object with encoding options or just the type\n * @param typeOrOptions.type target format (`image/jpeg`, `image/png`, `image/webp`, etc.)\n * @param typeOrOptions.quality quality as a number from 0 to 1, inclusive\n * @returns\n */\nasync function savePixels(\n\tpixels: NdArray<Uint8Array | Uint8ClampedArray>,\n\ttypeOrOptions: string | { type?: string; quality?: number }\n): Promise<Uint8Array> {\n\tlet options;\n\tif (typeof typeOrOptions === 'string') {\n\t\toptions = {\n\t\t\ttype: typeOrOptions,\n\t\t\tquality: undefined,\n\t\t};\n\t} else {\n\t\toptions = {\n\t\t\ttype: typeOrOptions.type,\n\t\t\tquality: typeOrOptions.quality,\n\t\t};\n\t}\n\treturn savePixelsInternal(pixels, options);\n}\n\nexport { getPixels, savePixels };\n"],"names":["getPixelsInternal","buffer","mimeType","Uint8Array","Error","blob","Blob","type","path","URL","createObjectURL","Promise","resolve","reject","img","Image","crossOrigin","onload","revokeObjectURL","canvas","OffscreenCanvas","width","height","context","getContext","drawImage","pixels","getImageData","ndarray","data","onerror","err","src","putPixelData","array","frame","shape","length","pick","ops","assign","assigns","stride","offset","savePixelsInternal","options","imageData","putImageData","streamCanvas","convertToBlob","ab","arrayBuffer","getPixels","savePixels","typeOrOptions","quality","undefined"],"mappings":"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"}